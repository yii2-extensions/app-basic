# HTTP server - Redirect to HTTPS
server {
    listen 80;
    server_name localhost;

    # Redirect all HTTP to HTTPS
    return 301 https://localhost:8445$request_uri;
}

# HTTPS server
server {
    charset utf-8;
    client_max_body_size 128M;
    listen 443 ssl http2;
    server_name localhost;

    # SSL Configuration
    ssl_certificate /app/docker/ssl/localhost.pem;
    ssl_certificate_key /app/docker/ssl/localhost-key.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Document root and index file
    root /app/public;
    index index.php;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logging
    access_log /var/log/nginx/ssl_access.log;
    error_log /var/log/nginx/ssl_error.log;

    # Yii URL rewriting (CRITICAL for Yii2)
    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # Deny PHP execution in /assets before the generic handler (Yii2 security)
    location ~ ^/assets/.*\.php$ {
        deny all;
        return 403;
    }

    # PHP handling via PHP-FPM
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
        fastcgi_pass 127.0.0.1:9000;
        try_files $uri =404;

        # PHP execution settings
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
    }

    # Block access to sensitive files
    location ~ /\.git {
        deny all;
    }

    location ~ /\.ht {
        deny all;
    }

    # Block access to hidden files/directories
    location ~* /\. {
        deny all;
    }

    # Static files handling with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Deny access to PHP files in specific directories
    location ~ ^/(vendor|runtime)/.+\.php$ {
        deny all;
        return 404;
    }
}
